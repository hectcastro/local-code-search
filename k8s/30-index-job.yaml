apiVersion: batch/v1
kind: Job
metadata:
  name: zoekt-index
  namespace: zoekt
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: indexer
          image: sourcegraph/zoekt-indexserver:latest
          env:
            - { name: BRANCHES, value: "HEAD,main,master" }
            - { name: PARALLEL, value: "8" }
            - { name: GIT_TERMINAL_PROMPT, value: "0" }
          volumeMounts:
            - { name: repos, mountPath: /repos }
            - { name: index, mountPath: /index }
          command: ["/bin/sh", "-lc"]
          args:
            - |
              set -euo pipefail

              normalize_git_remote() {
                remote="$1"
                scheme="https"
                host=""
                path=""

                case "$remote" in
                  git@*:* )
                    host=${remote#git@}
                    host=${host%%:*}
                    path=${remote#*:}
                    ;;
                  https://* )
                    rest=${remote#https://}
                    case "$rest" in
                      *@* )
                        rest=${rest#*@}
                        ;;
                    esac
                    host=${rest%%/*}
                    if [ "$rest" != "$host" ]; then
                      path=${rest#*/}
                    fi
                    ;;
                  * )
                    return 1
                    ;;
                esac

                if [ -z "$host" ]; then
                  return 1
                fi

                path=${path%.git}
                path=${path#/}
                path=${path%/}

                normalized="$scheme://$host"
                if [ -n "$path" ]; then
                  normalized="$normalized/$path"
                fi

                printf "%s\n" "${normalized%/}"
              }

              configure_gitlab_repo() {
                repo_dir="$1"
                remote="$(git -C "$repo_dir" config --get remote.origin.url 2>/dev/null || true)"
                if [ -z "$remote" ]; then
                  return
                fi

                normalized="$(normalize_git_remote "$remote")" || return
                rest="${normalized#*://}"
                host="${rest%%/*}"
                if [ "$rest" = "$host" ]; then
                  repo_name="$host"
                else
                  repo_name="$rest"
                fi

                case "$host" in
                  gitlab.*|*.gitlab.*)
                    current_url="$(git -C "$repo_dir" config --get zoekt.web-url 2>/dev/null || true)"
                    if [ "$current_url" != "$normalized" ]; then
                      git -C "$repo_dir" config zoekt.web-url "$normalized"
                    fi
                    current_type="$(git -C "$repo_dir" config --get zoekt.web-url-type 2>/dev/null || true)"
                    if [ "$current_type" != "gitlab" ]; then
                      git -C "$repo_dir" config zoekt.web-url-type gitlab
                    fi
                    current_name="$(git -C "$repo_dir" config --get zoekt.name 2>/dev/null || true)"
                    if [ "$current_name" != "$repo_name" ]; then
                      git -C "$repo_dir" config zoekt.name "$repo_name"
                    fi
                    ;;
                esac
              }

              echo "🔎 Looking for git repos under /repos ..."
              REPO_LIST="$(find /repos -type d -name .git -prune)"
              if [ -z "$REPO_LIST" ]; then
                echo "⚠️  No repositories found under /repos."
                echo "    Populate ~/zoekt/repos on the host."
                echo "    Skipping indexing."
                exit 0
              fi

              echo "$REPO_LIST" | sed 's|/\.git$||' | sort -u > /tmp/repos.txt
              echo "Found $(wc -l < /tmp/repos.txt) repos."

              while IFS= read -r repo; do
                echo "→ Indexing: $repo"
                configure_gitlab_repo "$repo"
                /usr/local/bin/zoekt-git-index \
                  -index /index \
                  -incremental \
                  -submodules=false \
                  -allow_missing_branches \
                  -branches "$BRANCHES" \
                  -parallelism "$PARALLEL" \
                  "$repo"
              done < /tmp/repos.txt

              echo "✅ Indexing complete."
      volumes:
        - name: repos
          hostPath: { path: /repos, type: DirectoryOrCreate }
        - name: index
          hostPath: { path: /index, type: DirectoryOrCreate }
